<a href="https://www.tindie.com/products/land_boards/8-channel-i2c-repeatermultiplexer-i2c-rpt-08/" >
<img src="http://land-boards.com/tindie/tindie-larges-v2.png" alt="Tindie Logo">
</img></a> 

<img src="http://land-boards.com/blwiki/images/2/26/DIGIO-128-X3-CCA_5847-640px.jpg" alt="DIGIO-128 Card photo"></img>

== Land Boards, LLC - DIGIO-128 MicroPython Driver and Example Code ==


* These are our [http://www.micropython.org/ MicroPython] Library and example code files for the [http://land-boards.com/blwiki/index.php?title=DIGIO-128 DIGIO-128] card
* Board is sold on the [https://www.tindie.com/products/land_boards/64128-channel-digital-io-card-digio-128/ Land Boards store on Tindie]
<img src="http://land-boards.com/blwiki/images/5/51/Tindie-mediums.png" alt="Tindie logo"></img>

== Files ==

* [https://github.com/land-boards/lb-Python-Code/blob/master/MicroPython/ESP32/libraries/digio128/digio128.py digio128.py] - Library/driver for the [http://land-boards.com/blwiki/index.php?title=DIGIO-128 DIGIO-128] card. 
** Uses Arduino style functions but in Python with methods extended to 128 bits.
*** [https://www.arduino.cc/reference/en/language/functions/digital-io/digitalread/ digitalRead(bit)] - bit is 0-127, returns 0 or 1
*** [https://www.arduino.cc/reference/en/language/functions/digital-io/digitalwrite/ digitalWrite(bit,val)] - write val (0 or 1) to bit (0-127)
*** [https://www.arduino.cc/reference/en/language/functions/digital-io/pinmode/ pinMode(bit,val)] - Set the DIGIO pin to
**** INPUT
**** OUTPUT
**** INPUT_PULLUP
* [https://github.com/land-boards/lb-Python-Code/blob/master/MicroPython/libraries/digio128/testDigio128.py testDigio128.py] - Used with port to port jumper cables to test [http://land-boards.com/blwiki/index.php?title=DIGIO-128 DIGIO-128] card. Cards are wired like [http://land-boards.com/blwiki/index.php?title=DIGIO-128#Factory_Acceptance_tests DIGIO-128 Factory Acceptance Test].
* [https://github.com/land-boards/lb-Python-Code/blob/master/MicroPython/libraries/digio128/blinkDigio128.py blinkDigio128.py] - Example code which blinks an LED on the bottom bit of the DIGIO-128. 

== Cautions ==

* MicroPython uses software timing loops for the SCL frequency and is inaccurate
** See our ticket [https://github.com/micropython/micropython/issues/4595 ESP32 I2C speed issue #4595]
*** Setting freq=100000 is close.
*** Setting freq=200000 is 328 KHz
*** Setting freq=400000 is 750 KHz.
** MCP23017 is only guaranteed to run at 400 KHz with 3.3V power

== Ownership ==

* Some of these files (particularly libraries) were created by others.
** There may be newer versions of these libraries "out there".
** Some libraries even have the same names but don't work the same.
* Many of these files were created by us based on the work of others.

=== Warning ===

* Use at your own risk.
** If you brick your part or it melt to a puddle, it's on you not us.
